# Specify version format
version: "{build}"

image:
  - Visual Studio 2017

# to add several platforms to build matrix
platform:
  - x64

configuration:
  - Release

environment:
  matrix:
    - CMAKE_GENERATOR: MinGW Makefiles
      BUILD_NAME: mingw

    - CMAKE_GENERATOR: Visual Studio 15 2017 Win64
      BUILD_NAME: vs2017

# Scripts that are called at very beginning, before repo cloning
init:
  - cmake --version
  - msbuild /version

install:

cache:

# project clone directory
clone_folder: C:\projects\test-ci\test-ci

before_build:
  # Use MinGW-w64 in C:\mingw-w64\x86_64-7.3.0-posix-seh-rt_v5-rev0\mingw64\bin
  - if "%CMAKE_GENERATOR%"=="MinGW Makefiles" set MINGW_DIR=C:\mingw-w64\x86_64-7.3.0-posix-seh-rt_v5-rev0\mingw64
  # Workaround for CMake not wanting sh.exe on PATH for MinGW
  - if "%CMAKE_GENERATOR%"=="MinGW Makefiles" set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - if "%CMAKE_GENERATOR%"=="MinGW Makefiles" set PATH=C:\mingw-w64\x86_64-7.3.0-posix-seh-rt_v5-rev0\mingw64\bin;%PATH%
  - dir C:\mingw-w64\x86_64-7.3.0-posix-seh-rt_v5-rev0\mingw64\bin
  - if "%CMAKE_GENERATOR%"=="MinGW Makefiles" mingw32-make --version

build_script:
  - echo %PATH%
  - md C:\projects\test-ci\build
  - cd C:\projects\test-ci\build
  - cmake -G "%CMAKE_GENERATOR%" -DCMAKE_BUILD_TYPE=%configuration% ..\test-ci
  - if "%CMAKE_GENERATOR%"=="Visual Studio 15 2017 Win64" cmake --build . --config %configuration% -- /m:2
  - if "%CMAKE_GENERATOR%"=="MinGW Makefiles" cmake --build . --config %configuration% -- -j2
  - dir C:\projects\test-ci\build
  - if "%CMAKE_GENERATOR%"=="Visual Studio 15 2017 Win64" ctest --output-on-failure
  - if "%CMAKE_GENERATOR%"=="MinGW Makefiles" ctest --output-on-failure